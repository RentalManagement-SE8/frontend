{"ast":null,"code":"var _jsxFileName = \"D:\\\\RentalManagement\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const user = await authService.getCurrentUser();\n          setCurrentUser(user);\n        }\n      } catch (err) {\n        console.error('Auth status check failed:', err);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    setError(null);\n    try {\n      const response = await authService.login(email, password);\n      localStorage.setItem('token', response.token);\n      setCurrentUser(response.user);\n      return response.user;\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    setError(null);\n    try {\n      const response = await authService.register(userData);\n      localStorage.setItem('token', response.token);\n      setCurrentUser(response.user);\n      return response.user;\n    } catch (err) {\n      setError(err.message || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","checkAuthStatus","token","localStorage","getItem","user","getCurrentUser","err","console","removeItem","login","email","password","response","setItem","message","register","userData","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/RentalManagement/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAuthStatus = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    const user = await authService.getCurrentUser();\r\n                    setCurrentUser(user);\r\n                }\r\n            } catch (err) {\r\n                console.error('Auth status check failed:', err);\r\n                localStorage.removeItem('token');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        checkAuthStatus();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        setError(null);\r\n        try {\r\n            const response = await authService.login(email, password);\r\n            localStorage.setItem('token', response.token);\r\n            setCurrentUser(response.user);\r\n            return response.user;\r\n        } catch (err) {\r\n            setError(err.message || 'Login failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        setError(null);\r\n        try {\r\n            const response = await authService.register(userData);\r\n            localStorage.setItem('token', response.token);\r\n            setCurrentUser(response.user);\r\n            return response.user;\r\n        } catch (err) {\r\n            setError(err.message || 'Registration failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const logout = async () => {\r\n        try {\r\n            await authService.logout();\r\n        } catch (err) {\r\n            console.error('Logout error:', err);\r\n        } finally {\r\n            localStorage.removeItem('token');\r\n            setCurrentUser(null);\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        currentUser,\r\n        loading,\r\n        error,\r\n        login,\r\n        register,\r\n        logout,\r\n        setCurrentUser,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}