{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for adding the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor for handling common errors\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Handle token expiration\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Try to refresh the token\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh-token`, {\n          refreshToken\n        });\n        const {\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        originalRequest.headers.Authorization = `Bearer ${token}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      // If refresh fails, logout the user\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","data","setItem","refreshError","removeItem","window","location","href"],"sources":["D:/RentalManagement/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Request interceptor for adding the auth token\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Response interceptor for handling common errors\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n\r\n        // Handle token expiration\r\n        if (error.response?.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n            try {\r\n                // Try to refresh the token\r\n                const refreshToken = localStorage.getItem('refreshToken');\r\n                if (refreshToken) {\r\n                    const response = await axios.post(`${API_BASE_URL}/auth/refresh-token`, { refreshToken });\r\n                    const { token } = response.data;\r\n                    localStorage.setItem('token', token);\r\n                    originalRequest.headers.Authorization = `Bearer ${token}`;\r\n                    return api(originalRequest);\r\n                }\r\n            } catch (refreshError) {\r\n                // If refresh fails, logout the user\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('refreshToken');\r\n                window.location.href = '/login';\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACrBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CACxBS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACb,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;;EAEpC;EACA,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACA;MACA,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAIU,YAAY,EAAE;QACd,MAAML,QAAQ,GAAG,MAAMpB,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,YAAY,qBAAqB,EAAE;UAAEwB;QAAa,CAAC,CAAC;QACzF,MAAM;UAAEZ;QAAM,CAAC,GAAGO,QAAQ,CAACO,IAAI;QAC/Bb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;QACpCS,eAAe,CAACd,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;QACzD,OAAOR,GAAG,CAACiB,eAAe,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOO,YAAY,EAAE;MACnB;MACAf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;MAChChB,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACnC;EACJ;EACA,OAAOf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}